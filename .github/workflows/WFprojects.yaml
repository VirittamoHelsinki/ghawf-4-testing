#================================= project name & types =================================#
name: issues workflow
run-name: ${{ github.actor }} has ignited issues workflow
on:
  issues:
    types: [opened, closed, labeled, unlabeled, assigned, unassigned]
  pull_request:
    types: [opened, closed, labeled, unlabeled, assigned, unassigned, review_requested, review_request_removed]

#========================================================================#

#================================= ENV =================================#

env:

  # ----------------- labels ----------------- #

  unassigned: Unassigned ❕
  unlabeled: Unlabeled ❗
  docs: Docs 📝
  feat: Feat 🆕
  style: Style 🖌️
  test: Test ☑️
  refactor: Refactor 🔁
  bugfix: BugFix 🐛
  chore: Chore 👷‍♂️
  add: Add ➕
  backend: Backend ⚙️
  frontend: Frontend 🖥️
  design: Design 🎨

  # ----------------- projects fields ----------------- #

  un_assigned: Unassigned ❕
  un_labeled: Unlabeled ❗
  backlog: Backlog 📜
  in_progress: In Progress 🚧
  ready_for_review: Ready for Review 🔍
  done: Done ✔️

  # ----------------- user/org related settings ----------------- #

  # username: 
  # gh_project_token: ${{ secrets.USE_THIS }}
  organization_name: VirittamoHelsinki
  gh_app_key: ${{ secrets.APP_SECRET_KEY }}
  gh_app_id: ${{ secrets.APP_ID }}
  gh_app_installation_id: ${{ secrets.APP_INSTALLATION_ID }}
  project_number: 17
  ## project_portfolio_number: # add here projects beta number that corresponds to project management portfolio for team leader or project manager to follow

  # ----------------- apps/handles for github actions (ignore for now) ----------------- #

  andymckay: andymckay/labeler@master # quick copy-pasta: ${{ env.andymckay }}
  leonsteinhaeuser: leonsteinhaeuser/project-beta-automations@v2.0.1 # quick copy-pasta: ${{ env.leonsteinhaeuser }}

#==================================================================#

#--------------------------------- ISSUE is OPENED ---------------------------------#

jobs:
  issue_opened: # issue opened
    name: issue_opened_or_reopened
    if: github.event_name == 'issues' && github.event.action == 'opened'
    runs-on: Ubuntu-20.04
    steps:
      - name: Move issue to ${{ env.backlog }} # step 1 
        uses: leonsteinhaeuser/project-beta-automations@v2.0.1
        with:
          # gh_token: ${{ env.gh_project_token }}
          # user: ${{ env.username }}
          gh_app_secret_key: ${{ env.gh_app_key }}
          gh_app_ID: ${{ env.gh_app_id }}
          gh_app_installation_ID: ${{ env.gh_app_installation_id }}
          organization: ${{ env.organization_name }}
          project_id: ${{ env.project_number }}
          # add-labels: 
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.backlog }}
      - name: If unlabeled, adds {{ env.unlabeled }} label # step 2
        uses: andymckay/labeler@master
        uses: leonsteinhaeuser/project-beta-automations@v2.0.1
        with:
          # gh_token: ${{ env.gh_project_token }}
          # user: ${{ env.username }}
          gh_app_secret_key: ${{ env.gh_app_key }}
          gh_app_ID: ${{ env.gh_app_id }}
          gh_app_installation_ID: ${{ env.gh_app_installation_id }}
          organization: ${{ env.organization_name }}
          project_id: ${{ env.project_number }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.un_labeled }}
          add-labels: ${{ env.unlabeled }}
          ignore-if-labeled: true

      - name: If unassigned, adds {{ env.unassigned }} label # step 3
        uses: andymckay/labeler@master
        uses: leonsteinhaeuser/project-beta-automations@v2.0.1
        with:
          # gh_token: ${{ env.gh_project_token }}
          # user: ${{ env.username }}
          gh_app_secret_key: ${{ env.gh_app_key }}
          gh_app_ID: ${{ env.gh_app_id }}
          gh_app_installation_ID: ${{ env.gh_app_installation_id }}
          organization: ${{ env.organization_name }}
          project_id: ${{ env.project_number }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.un_assigned }}
          add-labels: ${{ env.unassigned }}
          ignore-if-assigned: true

      - name: If an issue is reopened, adds ${{ env.backlog }} and removes ${{ env.done }} labels # step 4
        uses: andymckay/labeler@master
        uses: leonsteinhaeuser/project-beta-automations@v2.0.1
        with:
          # gh_token: ${{ env.gh_project_token }}
          # user: ${{ env.username }}
          gh_app_secret_key: ${{ env.gh_app_key }}
          gh_app_ID: ${{ env.gh_app_id }}
          gh_app_installation_ID: ${{ env.gh_app_installation_id }}
          organization: ${{ env.organization_name }}
          project_id: ${{ env.project_number }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.backlog }}
          add-labels: ${{ env.backlog }}
          remove-labels: ${{ env.done }}
#------------------------------------------------------------------#

#--------------------------------- ISSUE is CLOSED ---------------------------------#

  issue_closed: # issue closed
    name: issue_closed
    runs-on: Ubuntu-20.04
    if: github.event_name == 'issues' && github.event.action == 'closed'
    steps:
      - name: Move issue to ${{ env.done }} # change name to print

        run: |
          echo "The id of this job is: $GITHUB_JOB"
          echo "The id of this action is: $GITHUB_ACTION"
          echo "Issue is assigned to ${{ env.done }} status value inside the projects board"

      - name: If closed, moves the issue to done field in the projects board. # step 1
        uses: leonsteinhaeuser/project-beta-automations@v2.0.1
        with:
          # gh_token: ${{ secrets.USE_THIS}}
          # user: ${{ env.username }}
          gh_app_secret_key: ${{ env.gh_app_key }}
          gh_app_ID: ${{ env.gh_app_id }}
          gh_app_installation_ID: ${{ env.gh_app_installation_id }}
          organization: ${{ env.organization_name }}
          project_id: ${{ env.project_number }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.done }}

      - name: Adds "done" label to a closed issue # step 2
        uses: andymckay/labeler@master
        with:
          # gh_token: ${{ env.gh_project_token }}
          # user: ${{ env.username }}
          gh_app_secret_key: ${{ env.gh_app_key }}
          gh_app_ID: ${{ env.gh_app_id }}
          gh_app_installation_ID: ${{ env.gh_app_installation_id }}
          organization: ${{ env.organization_name }}
          project_id: ${{ env.project_number }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.done }}
          add-labels: ${{ env.done }}
          remove-labels: ${{ env.backlog }}, ${{ env.in_progress }}, ${{ env.ready_for_review }}  

#------------------------------------------------------------------#

#--------------------------------- when ISSUE is LABELED ---------------------------------#

  # If an issue will be given label x -> then put it in the 
  issues_labeled:
    runs-on: Ubuntu-20.04
    if: github.event_name == 'issues' && github.event.action == 'labeled'
    steps:
      - name: In Progress # condition 1
        if: github.event.label.name == '${{ env.in_progress }}' # label with name: status/in-progress
        uses: leonsteinhaeuser/project-beta-automations@v2.0.1
        with:
          # gh_token: ${{ env.gh_project_token }}
          # user: ${{ env.username }}
          gh_app_secret_key: ${{ env.gh_app_key }}
          gh_app_ID: ${{ env.gh_app_id }}
          gh_app_installation_ID: ${{ env.gh_app_installation_id }}
          organization: ${{ env.organization_name }}
          project_id: ${{ env.project_number }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.in_progress }}
      
      - name: Review Requested # condition 2
        if: github.event.label.name == '${{ env.ready_for_review }}' # label with name: status/review-requested
        uses: leonsteinhaeuser/project-beta-automations@v2.0.1
        with:
          # gh_token: ${{ env.gh_project_token }}
          # user: ${{ env.username }}
          gh_app_secret_key: ${{ env.gh_app_key }}
          gh_app_ID: ${{ env.gh_app_id }}
          gh_app_installation_ID: ${{ env.gh_app_installation_id }}
          organization: ${{ env.organization_name }}
          project_id: ${{ env.project_number }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.ready_for_review }}

      - name: Done # condition 3
        if: github.event.label.name == '${{ env.done }}' # label with name: status/done
        uses: leonsteinhaeuser/project-beta-automations@v2.0.1
        with:
          # gh_token: ${{ env.gh_project_token }}
          # user: ${{ env.username }}
          gh_app_secret_key: ${{ env.gh_app_key }}
          gh_app_ID: ${{ env.gh_app_id }}
          gh_app_installation_ID: ${{ env.gh_app_installation_id }}
          organization: ${{ env.organization_name }}
          project_id: ${{ env.project_number }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.done }}

#--------------------------------- when ISSUE is UNLABELED ---------------------------------#

  issues_unlabeled:
    runs-on: Ubuntu-20.04
    if: github.event_name == 'issues' && github.event.action == 'Unlabeled'
    steps:
      - name: Unlabeled # condition 1
        if: github.event.label.name == 'Unlabeled'
        uses: leonsteinhaeuser/project-beta-automations@v2.0.1
        with:
          # gh_token: ${{ env.gh_project_token }}
          # user: ${{ env.username }}
          gh_app_secret_key: ${{ env.gh_app_key }}
          gh_app_ID: ${{ env.gh_app_id }}
          gh_app_installation_ID: ${{ env.gh_app_installation_id }}
          organization: ${{ env.organization_name }}
          project_id: ${{ env.project_number }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.un_labeled }}

#------------------------------------------------------------------#